on:
    workflow_call:
      inputs:
        build_type:
          required: true
          type: string
        branch:
          type: string
        date:
          type: string
        sha:
          type: string
        repo:
          type: string
        node_type:
          type: string
          default: "cpu8"
        script:
          type: string
          default: "ci/build_conda.sh"
        matrix_filter:
          type: string
          default: "."
        CPU:
          type: string
          default: "amd64"
        GPU:
          type: string
          default: "v100"
        upload_to_conda:
          type: boolean
          required: false

defaults:
    run:
      shell: bash

permissions:
    actions: read
    checks: none
    contents: read
    deployments: none
    discussions: none
    id-token: write
    issues: none
    packages: read
    pages: none
    pull-requests: read
    repository-projects: none
    security-events: none
    statuses: none

jobs:
    build-test-upload:
      strategy:
        fail-fast: false
      runs-on: linux-${{ inputs.CPU }}-gpu-${{ inputs.GPU }}-latest-1
      env:
        RAPIDS_ARTIFACTS_DIR: ${{ github.workspace }}/artifacts
      container:
        image: rapidsai/ci-conda:cuda12.2.2-ubuntu22.04-py3.10
        env:
          RAPIDS_BUILD_TYPE: ${{ inputs.build_type }}
          PARALLEL_LEVEL: ${{ env.PARALLEL_LEVEL }}
          NVIDIA_VISIBLE_DEVICES: ${{ env.NVIDIA_VISIBLE_DEVICES }} # GPU jobs must set this container env variable
      steps:
        - uses: actions/checkout@v4
          env:
            GIT_TRACE_PACKET: 1
            GIT_TRACE: 1
            GIT_CURL_VERBOSE: 1
          with:
            repository: ${{ inputs.repo }}
            ref: ${{ inputs.sha }}
            fetch-depth: 0
        - name: Standardize repository information
          run: |
            echo "REPOSITORY=${{ inputs.repo || github.repository }}" >> "${GITHUB_ENV}"
            echo "SHA=$(git rev-parse HEAD)" >> "${GITHUB_ENV}"
            echo "REF_NAME=${{ inputs.branch || github.ref_name }}" >> "${GITHUB_ENV}"
            echo "NIGHTLY_DATE=${{ inputs.date }}" >> "${GITHUB_ENV}"
        - name: Build Conda Package
          run: ${{ inputs.script }}
          env:
            GH_TOKEN: ${{ github.token }}
        - name: Test Conda Package
          run: "./ci/test_conda.sh"
          env:
            GH_TOKEN: ${{ github.token }}
        - name: Upload Conda Package
          if: inputs.upload_to_conda
          run: "ci/upload_conda.sh"
          env:
            CONDA_TOKEN: ${{ secrets.NVIDIA_CONDA_TOKEN }}
